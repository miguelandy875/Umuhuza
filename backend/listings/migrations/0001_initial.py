# Generated by Django 5.2.7 on 2025-10-17 21:55

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('cat_id', models.AutoField(db_column='CAT_ID', primary_key=True, serialize=False)),
                ('cat_name', models.CharField(db_column='CAT_NAME', default='Uncategorized', max_length=255)),
                ('slug', models.SlugField(db_column='SLUG', max_length=255, unique=True)),
                ('cat_description', models.TextField(db_column='CAT_DESCRIPTION', default='Category description')),
                ('is_active', models.BooleanField(db_column='IS_ACTIVE', default=True)),
                ('createdat', models.DateTimeField(auto_now_add=True, db_column='CREATEDAT')),
                ('updatedat', models.DateTimeField(auto_now=True, db_column='UPDATEDAT')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'CATEGORIES',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('fav_id', models.AutoField(db_column='FAV_ID', primary_key=True, serialize=False)),
                ('createdat', models.DateTimeField(auto_now_add=True, db_column='CREATEDAT')),
            ],
            options={
                'db_table': 'FAVORITES',
            },
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('listing_id', models.AutoField(db_column='LISTING_ID', primary_key=True, serialize=False)),
                ('listing_title', models.CharField(db_column='LISTING_TITLE', max_length=255)),
                ('list_description', models.TextField(db_column='LIST_DESCRIPTION')),
                ('listing_price', models.DecimalField(db_column='LISTING_PRICE', decimal_places=2, max_digits=10)),
                ('list_location', models.CharField(db_column='LIST_LOCATION', max_length=255)),
                ('listing_status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('sold', 'Sold'), ('expired', 'Expired'), ('hidden', 'Hidden')], db_column='LISTING_STATUS', default='pending', max_length=10)),
                ('views', models.IntegerField(db_column='VIEWS', default=0)),
                ('is_featured', models.BooleanField(db_column='IS_FEATURED', default=False)),
                ('expiration_date', models.DateTimeField(blank=True, db_column='EXPIRATION_DATE', null=True)),
                ('createdat', models.DateTimeField(auto_now_add=True, db_column='CREATEDAT')),
                ('updatedat', models.DateTimeField(auto_now=True, db_column='UPDATEDAT')),
            ],
            options={
                'db_table': 'LISTINGS',
                'ordering': ['-createdat'],
            },
        ),
        migrations.CreateModel(
            name='ListingImage',
            fields=[
                ('listimage_id', models.AutoField(db_column='LISTIMAGE_ID', primary_key=True, serialize=False)),
                ('image_url', models.CharField(db_column='IMAGE_URL', max_length=255)),
                ('is_primary', models.BooleanField(db_column='IS_PRIMARY', default=False)),
                ('display_order', models.IntegerField(db_column='DISPLAY_ORDER', default=0)),
                ('uploadedat', models.DateTimeField(auto_now_add=True, db_column='UPLOADEDAT')),
            ],
            options={
                'db_table': 'LISTING_IMAGES',
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='PricingPlan',
            fields=[
                ('pricing_id', models.AutoField(db_column='PRICING_ID', primary_key=True, serialize=False)),
                ('pricing_name', models.CharField(db_column='PRICING_NAME', max_length=255)),
                ('pricing_description', models.TextField(db_column='PRICING_DESCRIPTION')),
                ('plan_price', models.DecimalField(db_column='PLAN_PRICE', decimal_places=2, max_digits=10)),
                ('duration_days', models.IntegerField(db_column='DURATION_DAYS')),
                ('category_scope', models.CharField(choices=[('all', 'All Categories'), ('real_estate', 'Real Estate'), ('vehicle', 'Vehicle')], db_column='CATEGORY_SCOPE', max_length=20)),
                ('max_listings', models.IntegerField(db_column='MAX_LISTINGS', default=1)),
                ('max_images_per_listing', models.IntegerField(db_column='MAX_IMAGES_PER_LISTING', default=5)),
                ('is_featured', models.BooleanField(db_column='IS_FEATURED', default=False)),
                ('is_active', models.BooleanField(db_column='IS_ACTIVE', default=True)),
                ('createdat', models.DateTimeField(auto_now_add=True, db_column='CREATEDAT')),
                ('updatedat', models.DateTimeField(auto_now=True, db_column='UPDATEDAT')),
            ],
            options={
                'db_table': 'PRICING_PLANS',
            },
        ),
        migrations.CreateModel(
            name='RatingReview',
            fields=[
                ('ratingrev_id', models.AutoField(db_column='RATINGREV_ID', primary_key=True, serialize=False)),
                ('rating', models.IntegerField(db_column='RATING', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, db_column='COMMENT', null=True)),
                ('is_visible', models.BooleanField(db_column='IS_VISIBLE', default=True)),
                ('createdat', models.DateTimeField(auto_now_add=True, db_column='CREATEDAT')),
                ('updatedat', models.DateTimeField(auto_now=True, db_column='UPDATEDAT')),
            ],
            options={
                'db_table': 'RATINGS_N_REVIEWS',
            },
        ),
        migrations.CreateModel(
            name='ReportMisconduct',
            fields=[
                ('reportmiscond_id', models.AutoField(db_column='REPORTMISCOND_ID', primary_key=True, serialize=False)),
                ('report_reason', models.TextField(db_column='REPORT_REASON')),
                ('report_type', models.CharField(choices=[('spam', 'Spam'), ('fraud', 'Fraud'), ('inappropriate', 'Inappropriate'), ('duplicate', 'Duplicate'), ('harassment', 'Harassment'), ('other', 'Other')], db_column='REPORT_TYPE', max_length=20)),
                ('report_status', models.CharField(choices=[('pending', 'Pending'), ('resolved', 'Resolved'), ('rejected', 'Rejected')], db_column='REPORT_STATUS', default='pending', max_length=10)),
                ('admin_notes', models.TextField(blank=True, db_column='ADMIN_NOTES', null=True)),
                ('createdat', models.DateTimeField(auto_now_add=True, db_column='CREATEDAT')),
                ('resolved_at', models.DateTimeField(blank=True, db_column='RESOLVED_AT', null=True)),
            ],
            options={
                'db_table': 'REPORTS_N_MISCONDUCT',
            },
        ),
    ]
