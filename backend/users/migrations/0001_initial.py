# Generated by Django 5.2.7 on 2025-10-17 21:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('userid', models.AutoField(db_column='USERID', primary_key=True, serialize=False)),
                ('user_firstname', models.CharField(db_column='USER_FIRSTNAME', max_length=255)),
                ('user_lastname', models.CharField(db_column='USER_LASTNAME', max_length=255)),
                ('email', models.EmailField(db_column='USER_EMAIL', max_length=254, unique=True)),
                ('phone_number', models.CharField(db_column='PHONE_NUMBER', max_length=20)),
                ('user_role', models.CharField(choices=[('buyer', 'Buyer'), ('seller', 'Seller'), ('dealer', 'Dealer')], db_column='USER_ROLE', default='buyer', max_length=10)),
                ('profile_photo', models.CharField(blank=True, db_column='PROFILE_PHOTO', default='default-avatar.png', max_length=255, null=True)),
                ('is_verified', models.BooleanField(db_column='IS_VERIFIED', default=False)),
                ('is_active', models.BooleanField(db_column='IS_ACTIVE', default=True)),
                ('email_verified', models.BooleanField(db_column='EMAIL_VERIFIED', default=False)),
                ('phone_verified', models.BooleanField(db_column='PHONE_VERIFIED', default=False)),
                ('email_verified_at', models.DateTimeField(blank=True, db_column='EMAIL_VERIFIED_AT', null=True)),
                ('phone_verified_at', models.DateTimeField(blank=True, db_column='PHONE_VERIFIED_AT', null=True)),
                ('verification_token', models.CharField(blank=True, db_column='VERIFICATION_TOKEN', max_length=100, null=True)),
                ('verification_token_expires', models.DateTimeField(blank=True, db_column='VERIFICATION_TOKEN_EXPIRES', null=True)),
                ('reset_password_token', models.CharField(blank=True, db_column='RESET_PASSWORD_TOKEN', max_length=100, null=True)),
                ('reset_password_expires', models.DateTimeField(blank=True, db_column='RESET_PASSWORD_EXPIRES', null=True)),
                ('last_login', models.DateTimeField(blank=True, db_column='LAST_LOGIN', null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, db_column='DATE_JOINED')),
                ('updatedat', models.DateTimeField(auto_now=True, db_column='UPDATEDAT')),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'USERS',
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('log_id', models.AutoField(db_column='LOG_ID', primary_key=True, serialize=False)),
                ('action_type', models.CharField(db_column='ACTION_TYPE', max_length=100)),
                ('entity_type', models.CharField(blank=True, db_column='ENTITY_TYPE', max_length=50, null=True)),
                ('entity_id', models.IntegerField(blank=True, db_column='ENTITY_ID', null=True)),
                ('description', models.TextField(blank=True, db_column='DESCRIPTION', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, db_column='IP_ADDRESS', null=True)),
                ('user_agent', models.TextField(blank=True, db_column='USER_AGENT', null=True)),
                ('createdat', models.DateTimeField(auto_now_add=True, db_column='CREATEDAT')),
                ('userid', models.ForeignKey(blank=True, db_column='USERID', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ACTIVITY_LOGS',
            },
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('userbadge_id', models.AutoField(db_column='USERBADGE_ID', primary_key=True, serialize=False)),
                ('badge_type', models.CharField(choices=[('verified', 'Verified'), ('top_dealer', 'Top Dealer'), ('trusted_seller', 'Trusted Seller'), ('power_buyer', 'Power Buyer')], db_column='BADGE_TYPE', max_length=20)),
                ('issuedat', models.DateTimeField(auto_now_add=True, db_column='ISSUEDAT')),
                ('expires_at', models.DateTimeField(blank=True, db_column='EXPIRES_AT', null=True)),
                ('userid', models.ForeignKey(db_column='USERID', on_delete=django.db.models.deletion.CASCADE, related_name='badges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'USER_BADGES',
            },
        ),
        migrations.CreateModel(
            name='VerificationCode',
            fields=[
                ('code_id', models.AutoField(db_column='CODE_ID', primary_key=True, serialize=False)),
                ('code', models.CharField(db_column='CODE', max_length=10)),
                ('code_type', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('password_reset', 'Password Reset')], db_column='CODE_TYPE', max_length=20)),
                ('contact_info', models.CharField(db_column='CONTACT_INFO', max_length=255)),
                ('is_used', models.BooleanField(db_column='IS_USED', default=False)),
                ('expires_at', models.DateTimeField(db_column='EXPIRES_AT')),
                ('createdat', models.DateTimeField(auto_now_add=True, db_column='CREATEDAT')),
                ('used_at', models.DateTimeField(blank=True, db_column='USED_AT', null=True)),
                ('userid', models.ForeignKey(db_column='USERID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'VERIFICATION_CODES',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='USERS_USER_EM_df0cfb_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['phone_number'], name='USERS_PHONE_N_6c98e6_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['user_role'], name='USERS_USER_RO_05d9e2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_verified'], name='USERS_IS_VERI_3937ed_idx'),
        ),
        migrations.AddIndex(
            model_name='activitylog',
            index=models.Index(fields=['userid'], name='ACTIVITY_LO_USERID_778fcd_idx'),
        ),
        migrations.AddIndex(
            model_name='activitylog',
            index=models.Index(fields=['action_type'], name='ACTIVITY_LO_ACTION__0642b9_idx'),
        ),
        migrations.AddIndex(
            model_name='activitylog',
            index=models.Index(fields=['entity_type', 'entity_id'], name='ACTIVITY_LO_ENTITY__c6dadb_idx'),
        ),
        migrations.AddIndex(
            model_name='activitylog',
            index=models.Index(fields=['createdat'], name='ACTIVITY_LO_CREATED_2f8afa_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userbadge',
            unique_together={('userid', 'badge_type')},
        ),
        migrations.AddIndex(
            model_name='verificationcode',
            index=models.Index(fields=['userid'], name='VERIFICATIO_USERID_c5aaf3_idx'),
        ),
        migrations.AddIndex(
            model_name='verificationcode',
            index=models.Index(fields=['code'], name='VERIFICATIO_CODE_d399d4_idx'),
        ),
        migrations.AddIndex(
            model_name='verificationcode',
            index=models.Index(fields=['code_type'], name='VERIFICATIO_CODE_TY_18371f_idx'),
        ),
        migrations.AddIndex(
            model_name='verificationcode',
            index=models.Index(fields=['expires_at'], name='VERIFICATIO_EXPIRES_a53c5b_idx'),
        ),
    ]
